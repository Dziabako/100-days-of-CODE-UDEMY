Exeptions:

try - w tym bloku piszemy kod ktory moze pojsc nie tak jak zakladamy
except - blok kodu ktory sie wykona jak powstanie blad / mozemy okreslic jaki blad lub zostawic tak jak jest
else - wykonuje sie jak nie bedzie zadnego bledu
finally - wykonuje sie bez wzgledu na to czy byl blad czy tez nie

Nie powinno sie uzywac except bez okreslenia ktory blad chcemy wylapac, poniewaz mozemy przeoczyc inne bledy
Mozemy miec kilka blokow except

Wylapany blad mozemy przypisac do zmiennej i go wyswietlic
except ErrorName as error_message:...

BLok else wykona sie dopiero wtedy jak naprawimy wyskakujace bledy w kodzie

#Exception Handling
try:
    file = open("a_file.txt")
    a_dictionary = {"key": "value"}
    print(a_dictionary["key"])
except FileNotFoundError:
    file = open("a_file.txt", "w")
    file.write("Something")
except KeyError as error_message:
    print(f"The key {error_message} does not exist.")
else:
    content = file.read()
    print(content)
finally:
    raise TypeError("This is an error that I made up.")


raise - pozwala nam na reczne wywolanie bledu
Mozna to wykorzystac w momencie kiedy podawane dane sie spelniaja wymagan

#BMI Example
height = float(input("Height: "))
weight = int(input("Weight: "))

if height > 3:
    raise ValueError("Human Height should not be over 3 meters.")

bmi = weight / height ** 2
print(bmi)


PRZYKLADOWE ZADANIA SA NA REPLIT
Zad 1:
fruits = ["Apple", "Pear", "Orange"]

#TODO: Catch the exception and make sure the code runs without crashing.
def make_pie(index):
    try:
        fruit = fruits[index]
        print(fruit + " pie")
    except IndexError:
        print("There is not that many fruits")
    else:
        print(fruit + " pie")


make_pie(4)

Zad 2:
facebook_posts = [
    {'Likes': 21, 'Comments': 2},
    {'Likes': 13, 'Comments': 2, 'Shares': 1},
    {'Likes': 33, 'Comments': 8, 'Shares': 3},
    {'Comments': 4, 'Shares': 2},
    {'Comments': 1, 'Shares': 1},
    {'Likes': 19, 'Comments': 3}
]

total_likes = 0

for post in facebook_posts:
    try:
        total_likes = total_likes + post['Likes']
    except KeyError:
        pass  //  total_likes += 0    ////// w ten sposob albo przeskoczymy jak wyskoczy blad lub dodamy 0 do sumy


print(total_likes)


JSON

json.dump() - write
json.load() - read
json.update() - update

Zapisywanie w pliku json / dane ida jako slownik / indent to wciecie zeby latwiej bylo odczytac
            # json.dump(new_data, file, indent=4)

Odczytywanie z pliku json
            # data = json.load(file)
            # print(data)

Update z json / najpierw trzeba zaladowac plik przez load tak jak jest wyzej / na koniec zapisujemy
            data = json.load(file)
            data.update(new_data)
