CSS - cascading style sheets
Jezyk uzywany wylacznie to stylizowania strony html

Zanim dodamy jakikolwiek kod css to jest juz uzywany domyslny kod css
google --> browser default css


## PRZYKLAD ## IN LINE CSS ##

<!--style bierze jako dane wejsciowe kod css / jest to inline styling-->
<body>
<!--W zdjeciu moze byc link lub sciezka lokalna / cellspacing to przestrrzen wyrazana w % pomiedzy komorkami i
wierszami-->
    <table cellspacing="20">
        <tr>
            <td><img src="pobrane.png" alt="Example"></td>
            <td>



## PRZYKLAD ## INTERNAL CSS ##

<head>
<!--meta to informacje jak ma sie renderowac dana strona-->
    <meta charset="UTF-8">
    <title>Dawid Personal Site</title>
<!--Sposob na zmiane wygladu poszczegolnych elementow strony przy wykorzystaniu css / internal css-->
<!--Ustawianie kropkowaej lini bez dolnej i bocznych krawedzi-->
<!--Jezeli stylizujemy przy uzyciu css nie moze byc uzyty stylizowanie html-->
<!--Zeby tego uzyc w innym plikach html nalezy to skopiowac / Jest latwiejsza metoda do tego-->
    <style>
        body {
            background-color: powderblue;
        }

        hr {
            border-style: dotted none none none;
            border-color: grey;
            border-width: 10px;
            width: 5%
        }

    </style>
</head>



## PRZYKLAD ## EXTERNAL CSS ## Wszystko ze style znajduje sie w pliku styles.css
<!--EXTERNAL CSS-->
    <link rel="stylesheet" href="./css/styles.css">


Przy debugowaniu dobrze jest uzyac chrome developers tools
3 kropki --> wiecej narzedzi --> narzedzia dla deweloperow
Pomaga to nam znalezc mniej wiecej co jest nie tak

## CSS Syntax ##
selector {property: value;}
Przy duzej ilosc property przy danym selectorze jest ustawiac je alfabetycznie

## Class selector ##
<selector class="class">
selector.class {property: value;}
LUB
.class {property: value;}

## ID selector ##
<selector id="nazwa">
#nazwa {propert: value}

ID moze byc tylko jedno (nazwy nie moga sie powtarzac)
Uzywane do identyfikacji elementow ktore sa pojedyncze na danej stronie

Class mozna przydzielic do kilku elementow ta sama nazwa
Czyli do elementow powiazanych ktore beda mialy te same wlasciwosci
Moze miec dwuczlonowa nazwe przez co mozna uzyc kazdego czlonu osobno do stylizowania css

W obu przypadkach robia one to samo

## SUDO CLASES ##
Kazdy element ma dany status
element:sudo class
W ten sposob elementy na stronie moga sie zmieniac w rozny sposob w zaleznosci od danej klasy sudo
Np. po najechaniu myszka beda zmieniac kolor
Tworzy sie wtedy na nowo dana funkcjonalnosc
selector:sudo_class {property: value;}

<div><\div> pozwala nam podzielic kod html na poszczegolne bloki i odpowiednio je formatowac

Strony sa tworzone w tzw box model
Oznacza to ze kazdy element na stronie to box, ktory mo≈ºemy edytowac
Margin - odstep miedzy elementami
Border - "obramowanie" boxu
Padding - odleglosc miedzy border a zawartoscia boxu

Image Display property
Posiada 4 wartosci:
 - BLock
 - inline
 - Inline-BLock
 - none

Common BLock elements (zajmuja caly wiersz):
 - Paragraphs (<p>)
 - Headers (<h1> through <h6>)
 - Divisions (<div>)
 - Lists and list items (<ul>, <ol> and <li>)
 - Forms (<form>)

<span> - pozwala nam zaznaczyc dany frament bloku i go formatowac

Common Inline Elements:
 - Spans (<span>)
 - Image (<img>)
 - Anchors (<a>)
